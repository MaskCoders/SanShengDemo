buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.1'
    }
}
apply plugin: 'com.android.application'

repositories {
    jcenter()
}

android {
    compileSdkVersion 19//设置编译时用的Android版本
    buildToolsVersion '19.1.0'//设置编译时使用的构建工具的版本

    defaultConfig {//设置一些默认属性，其可用属性是buildTypes和ProductFlavors之和
        applicationId "com.sansheng.testcenter"
        minSdkVersion 17 //设置兼容的最小版本
        targetSdkVersion 19 //设置目标SDK版本
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
    //签名
    signingConfigs {
        myConfig {
            storeFile file("../keystore/sansheng.keystore")
            storePassword "sansheng"
            keyAlias "sansheng"
            keyPassword "sansheng"
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "_debug"
            signingConfig signingConfigs.myConfig
            zipAlignEnabled true
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true

        }
        release {
            minifyEnabled false
            zipAlignEnabled true
            signingConfig signingConfigs.myConfig
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
        }
    }
    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    //for bug below
//Error:Gradle: Execution failed for task ':app:packageDebug'.
//        > Duplicate files copied in APK META-INF/LICENSE
//File 1: /home/sunshaogang/workspace/workspace-git/SanShengDemo/app/libs/mina-core-2.0.12.jar
//File 2: /home/sunshaogang/workspace/workspace-git/SanShengDemo/app/libs/mina-core-2.0.12.jar
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}
task copyNativeLibs(type: Copy) {
    from fileTree(dir: 'libs', include: '*/*.so')
    into new File(buildDir, 'lib')
    println "hello world " + buildDir
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyNativeLibs)
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:support-v4:21.0.0'
    compile 'com.telly:groundy-compiler:1.4'
    // compile 'com.commit451:PhotoView:1.2.4'
    compile 'com.google.code.gson:gson:2.2.2'
}
